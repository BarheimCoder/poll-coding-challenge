version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: polling-db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-polling}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - polling-network

  backend:
    build: ./server
    container_name: polling-backend
    depends_on:
      - postgres
    environment:
      PGUSER: ${DB_USER:-postgres}
      PGPASSWORD: ${DB_PASSWORD:-postgres}
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: ${DB_NAME:-polling}
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${API_PORT:-5000}
    ports:
      - "${API_PORT:-5000}:5000"
    restart: unless-stopped
    networks:
      - polling-network

  frontend:
    build: ./client
    container_name: polling-frontend
    ports:
      - "${WEB_PORT:-8082}:80"
    depends_on:
      - backend
    environment:
      VITE_API_URL: ${VITE_API_URL:-/api}
    restart: unless-stopped
    networks:
      - polling-network

networks:
  polling-network:
    driver: bridge

volumes:
  postgres_data: